{"ast":null,"code":"import React,{useContext}from\"react\";import TaskContext from\"../context/TaskContext\";import CompletedTask from\"./CompletedTask\";import{jsx as _jsx}from\"react/jsx-runtime\";function Completed(){var _useContext=useContext(TaskContext),tasks=_useContext.tasks;return/*#__PURE__*/_jsx(\"div\",{children:tasks.length!==0?tasks.map(function(task,index){return task.completed&&/*#__PURE__*/_jsx(CompletedTask,{task:task,id:index},index);}):/*#__PURE__*/_jsx(\"h1\",{children:\"No Task Found\"})});}export default Completed;","map":{"version":3,"names":["React","useContext","TaskContext","CompletedTask","Completed","tasks","length","map","task","index","completed"],"sources":["/Users/user/Desktop/Todo-App/frontend/src/components/Completed.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport TaskContext from \"../context/TaskContext\";\nimport CompletedTask from \"./CompletedTask\";\nfunction Completed() {\n    const { tasks } = useContext(TaskContext);\n    return (\n        <div>\n            {\n                (tasks.length !== 0) ? (\n                    tasks.map((task, index) => {\n                        return (\n                            task.completed && <CompletedTask\n                                key={index}\n                                task={task}\n                                id={index}\n                            />\n                        )\n                    })\n                ) : (\n                    <h1>No Task Found</h1>\n                )\n            }\n        </div>\n    );\n}\n\nexport default Completed;"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,MAAOC,YAAW,KAAM,wBAAwB,CAChD,MAAOC,cAAa,KAAM,iBAAiB,CAAC,2CAC5C,QAASC,UAAS,EAAG,CACjB,gBAAkBH,UAAU,CAACC,WAAW,CAAC,CAAjCG,KAAK,aAALA,KAAK,CACb,mBACI,qBAESA,KAAK,CAACC,MAAM,GAAK,CAAC,CACfD,KAAK,CAACE,GAAG,CAAC,SAACC,IAAI,CAAEC,KAAK,CAAK,CACvB,MACID,KAAI,CAACE,SAAS,eAAI,KAAC,aAAa,EAE5B,IAAI,CAAEF,IAAK,CACX,EAAE,CAAEC,KAAM,EAFLA,KAAK,CAGZ,CAEV,CAAC,CAAC,cAEF,oBAAI,eAAa,EACpB,EAEH,CAEd,CAEA,cAAeL,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}